spring:
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:default}
  application:
    name: booking-service
  config:
    import: ${SPRING_CONFIG_IMPORT:optional:configserver:http://localhost:8071/}
  rabbitmq:
    host: ${SPRING_RABBITMQ_HOST:localhost}
    port: ${SPRING_RABBITMQ_PORT:5672}
    username: ${SPRING_RABBITMQ_USERNAME:guest}
    password: ${SPRING_RABBITMQ_PASSWORD:guest}
  jpa:
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        show_sql: true
  sql:
    init:
      mode: always # Giúp khởi tạo database khi khởi động ứng dụng. Điều này có lợi khi triển khai ứng dụng thông qua Docker và Docker compose.
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/booking-db}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:49@Da5J,[KsemDN}
  threads:
    virtual:
      enabled: true

# Spring Actuator Configurations
management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  metrics:
    distribution:
      percentiles-histogram:
        resilience4j:
          circuitbreaker:
            enabled: true
        http:
          server:
            requests:
              enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    # Liveness and Readiness probes configuration.
    readiness-state:
      enabled: true
    liveness-state:
      enabled: true
    circuitbreakers:
      enabled: true
    ratelimiters:
      enabled: true
    diskspace:
      enabled: true
    redis:
      enabled: true

server:
  port: 8083
grpc:
  server:
    port: 9093
  client:
    movieService:
      address: ${GRPC_SERVER_MOVIE_ADDRESS:static://localhost:9092}
      negotiation-type: plaintext
    webSocketService:
      address: ${GRPC_SERVER_WEBSOCKET_ADDRESS:static://localhost:9094}
      negotiation-type: plaintext

eureka:
  client:
    fetch-registry: true
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
      preferIpAddress: true
    register-with-eureka: true